{
    "name": "n_german",
    "vars": {
        "Cache_State": "nat=>nat",
        "Cache_Data": "nat=>nat",
        "Chan1_Cmd": "nat=>nat",
        "Chan1_Data": "nat=>nat",
        "Chan2_Cmd": "nat=>nat",
        "Chan2_Data": "nat=>nat",
        "Chan3_Cmd": "nat=>nat",
        "Chan3_Data": "nat=>nat",
        "InvSet": "nat=>bool",
        "ShrSet": "nat=>bool",
        "ExGntd": "bool",
        "CurCmd": "nat",
        "CurPtr": "nat",
        "MemData": "nat",
        "AuxData": "nat"
    },
    "states": [
        "I",
        "S",
        "E",
        "Empty",
        "ReqS",
        "ReqE",
        "Inv",
        "InvAck",
        "GntS",
        "GntE"
    ],
    "init": {
        "var": [
            "i",
            "d"
        ],
        "guard": "Chan1_Cmd i = Empty &  Chan2_Cmd i = Empty &  Chan3_Cmd i = Empty &  Cache_State i = I &  InvSet i  = false &  ShrSet i  = false &  ExGntd = false &  CurCmd = Empty &  MemData = d &  AuxData = d"
    },
    "rules": [
        {
            "name": "Store",
            "var": [
                "i"
            ],
            "guard": "Cache_State i = E",
            "assign": {
                "Cache_Data i": "d",
                "AuxData": "d"
            }
        },
        {
            "name": "SendReqS",
            "var": [
                "i"
            ],
            "guard": "Chan1_Cmd i = Empty & Cache_State i = I",
            "assign": {
                "Chan1_Cmd i": "ReqS"
            }
        },
        {
            "name": "SendReqE",
            "var": [
                "i"
            ],
            "guard": "Chan1_Cmd i = Empty & Cache_State i = I | Cache_State i = S",
            "assign": {
                "Chan1_Cmd i": "ReqE"
            }
        },
        {
            "name": "RecvReqS",
            "var": [
                "i",
                "j"
            ],
            "guard": "CurCmd = Empty & Chan1_Cmd i = ReqS",
            "assign": {
                "CurCmd": "ReqS",
                "CurPtr": "i",
                "Chan1_Cmd i": "Empty",
                "InvSet j ": "ShrSet j "
            }
        },
        {
            "name": "RecvReqE",
            "var": [
                "i",
                "j"
            ],
            "guard": "CurCmd = Empty & Chan1_Cmd i = ReqE",
            "assign": {
                "CurCmd": "ReqE",
                "CurPtr": "i",
                "Chan1_Cmd i": "Empty",
                "InvSet j ": "ShrSet j "
            }
        },
        {
            "name": "SendInv",
            "var": [
                "i"
            ],
            "guard": "Chan2_Cmd i = Empty & InvSet i  = true & CurCmd = ReqE | CurCmd = ReqS & ExGntd = true",
            "assign": {
                "Chan2_Cmd i": "Inv",
                "InvSet i ": "false"
            }
        },
        {
            "name": "SendInvAck1",
            "var": [
                "i"
            ],
            "guard": "Chan2_Cmd i = Inv & Chan3_Cmd i = Empty",
            "assign": {
                "Chan2_Cmd i": "Empty",
                "Chan3_Cmd i": "InvAck",
                "Cache_State i": "I"
            }
        },
        {
            "name": "SendInvAck2",
            "var": [
                "i"
            ],
            "guard": "Chan2_Cmd i = Inv & Chan3_Cmd i = Empty & Cache_State i = E",
            "assign": {
                "Chan2_Cmd i": "Empty",
                "Chan3_Cmd i": "InvAck",
                "Chan3_Data i": "Cache_Data i",
                "Cache_State i": "I"
            }
        },
        {
            "name": "RecvInvAck1",
            "var": [
                "i"
            ],
            "guard": "Chan3_Cmd i = InvAck & ~ (CurCmd = Empty) & ExGntd = true",
            "assign": {
                "Chan3_Cmd i": "Empty",
                "ShrSet i ": "false",
                "ExGntd": "false",
                "MemData": "Chan3_Data i"
            }
        },
        {
            "name": "RecvInvAck2",
            "var": [
                "i"
            ],
            "guard": "Chan3_Cmd i = InvAck & ~ (CurCmd = Empty)",
            "assign": {
                "Chan3_Cmd i": "Empty",
                "ShrSet i ": "false"
            }
        },
        {
            "name": "SendGntS",
            "var": [
                "i"
            ],
            "guard": "CurCmd = ReqS & CurPtr = i & Chan2_Cmd i = Empty & ExGntd = false",
            "assign": {
                "Chan2_Cmd i": "GntS",
                "Chan2_Data i": "MemData",
                "ShrSet i ": "true",
                "CurCmd": "Empty"
            }
        },
        {
            "name": "SendGntE",
            "var": [
                "i",
                "j"
            ],
            "guard": "CurCmd = ReqE & CurPtr = i & Chan2_Cmd i = Empty & ExGntd = false & ShrSet j  = false",
            "assign": {
                "Chan2_Cmd i": "GntE",
                "Chan2_Data i": "MemData",
                "ShrSet i ": "true",
                "ExGntd": "true",
                "CurCmd": "Empty"
            }
        },
        {
            "name": "RecvGntS",
            "var": [
                "i"
            ],
            "guard": "Chan2_Cmd i = GntS",
            "assign": {
                "Cache_State i": "S",
                "Cache_Data i": "Chan2_Data i",
                "Chan2_Cmd i": "Empty"
            }
        },
        {
            "name": "RecvGntE",
            "var": [
                "i"
            ],
            "guard": "Chan2_Cmd i = GntE",
            "assign": {
                "Cache_State i": "E",
                "Cache_Data i": "Chan2_Data i",
                "Chan2_Cmd i": "Empty"
            }
        }
    ],
    "invs": [
        {
            "vars": [
                "i",
                "j"
            ],
            "prop": "~ (i = j) -> Cache_State i = E -> Cache_State j = I & Cache_State i = S -> Cache_State j = I | Cache_State j = S"
        },
        {
            "vars": [
                "i"
            ],
            "prop": "ExGntd = false -> MemData = AuxData & ~ (Cache_State i = I) -> Cache_Data i = AuxData"
        }
    ]
}