MODULE main
VAR
n[1] : {idle, try, crit, exit};
n[2] : {idle, try, crit, exit};
n[3] : {idle, try, crit, exit};
x : boolean;

--------------------
n_Try__1 : process Proc__n_Try__1(n[1]);

n_Try__2 : process Proc__n_Try__2(n[2]);

n_Try__3 : process Proc__n_Try__3(n[3]);

n_Crit__1 : process Proc__n_Crit__1(n[1]);

n_Crit__2 : process Proc__n_Crit__2(n[2]);

n_Crit__3 : process Proc__n_Crit__3(n[3]);

n_Exit__1 : process Proc__n_Exit__1(n[1]);

n_Exit__2 : process Proc__n_Exit__2(n[2]);

n_Exit__3 : process Proc__n_Exit__3(n[3]);

n_Idle__1 : process Proc__n_Idle__1(n[1]);

n_Idle__2 : process Proc__n_Idle__2(n[2]);

n_Idle__3 : process Proc__n_Idle__3(n[3]);

--------------------
ASSIGN
init(n[1]) := case
TRUE : IDLE;
esac;
init(n[2]) := case
TRUE : IDLE;
esac;
init(n[3]) := case
TRUE : IDLE;
esac;
init(x) := case
TRUE : TRUE;
esac;

--------------------
MODULE Proc__n_Try__1(n__1)
ASSIGN
next(n__1) := case
(n[1] = idle) : try;
TRUE : n__1;
esac;

---------
MODULE Proc__n_Try__2(n__2)
ASSIGN
next(n__2) := case
(n[2] = idle) : try;
TRUE : n__2;
esac;

---------
MODULE Proc__n_Try__3(n__3)
ASSIGN
next(n__3) := case
(n[3] = idle) : try;
TRUE : n__3;
esac;

---------
MODULE Proc__n_Crit__1(n__1)
ASSIGN
next(n__1) := case
(n[1] = try & x = true) : crit;
TRUE : n__1;
esac;
next(x) := case
(n[1] = try & x = true) : FALSE;
TRUE : x;
esac;

---------
MODULE Proc__n_Crit__2(n__2)
ASSIGN
next(n__2) := case
(n[2] = try & x = true) : crit;
TRUE : n__2;
esac;
next(x) := case
(n[2] = try & x = true) : FALSE;
TRUE : x;
esac;

---------
MODULE Proc__n_Crit__3(n__3)
ASSIGN
next(n__3) := case
(n[3] = try & x = true) : crit;
TRUE : n__3;
esac;
next(x) := case
(n[3] = try & x = true) : FALSE;
TRUE : x;
esac;

---------
MODULE Proc__n_Exit__1(n__1)
ASSIGN
next(n__1) := case
(n[1] = crit) : exit;
TRUE : n__1;
esac;

---------
MODULE Proc__n_Exit__2(n__2)
ASSIGN
next(n__2) := case
(n[2] = crit) : exit;
TRUE : n__2;
esac;

---------
MODULE Proc__n_Exit__3(n__3)
ASSIGN
next(n__3) := case
(n[3] = crit) : exit;
TRUE : n__3;
esac;

---------
MODULE Proc__n_Idle__1(n__1)
ASSIGN
next(n__1) := case
(n[1] = exit & x = false) : idle;
TRUE : n__1;
esac;
next(x) := case
(n[1] = exit & x = false) : TRUE;
TRUE : x;
esac;

---------
MODULE Proc__n_Idle__2(n__2)
ASSIGN
next(n__2) := case
(n[2] = exit & x = false) : idle;
TRUE : n__2;
esac;
next(x) := case
(n[2] = exit & x = false) : TRUE;
TRUE : x;
esac;

---------
MODULE Proc__n_Idle__3(n__3)
ASSIGN
next(n__3) := case
(n[3] = exit & x = false) : idle;
TRUE : n__3;
esac;
next(x) := case
(n[3] = exit & x = false) : TRUE;
TRUE : x;
esac;

---------
